# reset to last commit
git reset --hard HEAD

# tag with date and time
TAG=$(date "+%Y-%m-%d--%H-%M") && git tag $TAG && git push origin $TAG

# print 16 bit assembler code
objdump -m i8086 -D bin/src/osca.o | less

# print assembler with source (compile with option -g for source)
objdump -dS bin/src/main.o | less

# print 16 bit assembler code
objdump -b binary -m i8086 -D pczero.img | less

objdump -b binary -m i8086 -D pczero.img | grep call

objdump -d bin/src/main.o | grep call

clang-tidy -header-filter=.* src/main.cc -- -pedantic -pedantic-errors -Wall -Wextra -Werror -Wconversion -Wcast-align -Wcast-qual -Wctor-dtor-privacy -Wdisabled-optimization -Wmissing-declarations -Wmissing-include-dirs -Woverloaded-virtual -Wredundant-decls -Wshadow -Wsign-conversion -Wsign-promo -Wswitch-default -Wundef -Weffc++ -Wfloat-equal -Wno-unused-private-field

cppcheck --enable=all src/main.cc

# more read
mov $0x023f,%ax # command 2, 0x3f sectors 31Â½K
mov $0x0101,%cx # from cylinder 2 sector 1 (sector starts from 1, not 0)
# %dl (drive number) and %dh (head) is unchanged
mov $0x0bc0,%bx # to es:bx=bc00:0000 (7e00+1f*200)
mov %bx,%es
xor %bx,%bx
int $0x13 # read disk

https://stackoverflow.com/questions/3645803/bios-int-13h-with-ah-2-can-only-read-72-sectors-each-time-why

#!/bin/sh
cp ~/w/pczero/pczero.img .
truncate pczero.img --size=1M
rm pczero.vdi
VBoxManage convertfromraw --format VDI pczero.img pczero.vdi

# generate exception
uint32 ptr=0;
*reinterpret_cast<uint32*>(ptr)=1;
uint32 a=1/ptr;
out.p_hex_8b(uint8(a));
